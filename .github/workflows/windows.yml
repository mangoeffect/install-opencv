name: windows-ci
# Workflow file for windows
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  job:
    name: runs-windows
    runs-on: windows-latest

    env:
      VCPKG_ROOT: '${{ github.workspace }}/vcpkg'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Get cmake
        # 安装最新版CMake.
        uses: lukka/get-cmake@latest

      # vcpkg缓存
      - name: Restore vcpkg and its artifacts.
        uses: actions/cache@v2
        id: vcpkg-cache
        with:
          path: |
            ${{ env.VCPKG_ROOT }}
            ${{ github.workspace }}/build/vcpkg_installed
            !${{ env.VCPKG_ROOT }}/.git
            !${{ env.VCPKG_ROOT }}/buildtrees
            !${{ env.VCPKG_ROOT }}/packages
            !${{ env.VCPKG_ROOT }}/downloads
          key: |
            ${{ hashFiles( 'vcpkg.json' ) }}-cache-key-v1

      # 安装vcpkg
      - name: Get vcpkg(windows)
        # 平台为windows且未缓存
        # if: ${{ steps.vcpkg-cache.outputs.cache-hit != 'true' }}
        run: |
          cd ${{ github.workspace }}
          mkdir build -force
          git clone https://github.com/Microsoft/vcpkg.git
          cd vcpkg
          .\bootstrap-vcpkg.bat
   
      # 运行cmake生存vs解决方案
      - name: Running cmake
        run: |
          cd ${{ github.workspace }}
          cd build
          cmake .. -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake -DVCPKG_MANIFEST_MODE=ON -DCMAKE_BUILD_TYPE=Release

      # 编译解决方案
      - name: Build Solution
        run: |
          cd build
          cmake --build . --parallel --config Release